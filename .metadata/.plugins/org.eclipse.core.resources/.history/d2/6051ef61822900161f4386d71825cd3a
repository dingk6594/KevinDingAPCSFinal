package JavaGame;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


public class PaddleBall extends JPanel {

	/**
	 * 
	 */
	private boolean title = true;  
	private static final long serialVersionUID = 1L;
	Ball ball = new Ball(this); 
	Paddle paddle = new Paddle(this);
	BrickWall walls = new BrickWall(this);
	//int score = ball.getScore(); 
	//RandPower power = new RandPower(this); 
	int speed = 4;
	boolean playing = false;
	
	
	public PaddleBall()
	{
		//if(score == 26)
		//{
			//win();
		//}
		title = true; 
		//reset = false; 
		
		addKeyListener(new KeyListener() 
		{
			@Override
			public void keyTyped(KeyEvent e) 
			{
				
			}
			
			@Override
			public void keyReleased(KeyEvent e) 
			{
				paddle.keyReleased(e);
				//paddle2.keyReleased(e);
			}

			@Override
			public void keyPressed(KeyEvent e) 
			{
				paddle.keyPressed(e);
				//paddle2.keyPressed(e);
			}
		});
		setFocusable(true);
		//Sound.BACK.loop();
	}
	
	public void move()
	{
		ball.moveBall();
		//ball2.moveBall();
		paddle.movePaddle();
		//paddle2.movePaddle();
	}
	
	public void paint(Graphics graphics)
	{
		/*if(title) {
			graphics.setColor(Color.MAGENTA);
			graphics.fillRect(0, 0, 500, 500);

			// draw title screen message
			graphics.setColor(Color.white);
			Font welcome = new Font("Serif", Font.BOLD, 64);
			graphics.setFont(welcome);
			String welcomeMessage = "Brick Breaker";
			graphics.drawString(welcomeMessage, 0, 250);

			Font instruction = new Font("Comic Sans MS", Font.BOLD, 36);
			graphics.setFont(instruction);
			String instructions = "Click the screen to begin";
			graphics.drawString(instructions, 0, 350);
		}*/
		
		//if(!title){
		super.paint(graphics);
		Graphics2D object = (Graphics2D) graphics;
		object.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		object.setColor(Color.GREEN);
		//object.drawString("Paddle Ball by Dea B", 100, 30);
		object.setColor(Color.PINK);
		//object.drawString("Instructions:Hit the ball with the paddle.", 240, 30);
		ball.paint(object);
		//ball2.paint(object); 
		if(ball.getScore() <= 22)
		{
			paddle.paint(object);
		}
		
		//paddle2.paint(object);
		object.setColor(Color.BLUE);
		object.setFont(new Font("Times New Roman", Font.BOLD, 24));
		object.drawString("Score = " + String.valueOf(ball.getScore()), 10, 30);
		object.setColor(Color.BLACK);
		object.setFont(new Font("Times New Roman", Font.BOLD, 30));
		object.drawString("Brick Breaker", 150, 30);
		object.setColor(Color.BLUE);
		walls.paint(object);
		//power.paint(object);
		//}
		
		if(ball.getScore() > 22)
		{
			paddle.repaintLarge(object);
		}
	}
	
	public void die()
	{
		//Sound.BACK.stop();
		//Sound.GAMEOVER.play();
		JOptionPane.showMessageDialog(this, "SoRrY yOu DiE gAmE oVeR!", "Final score is " + String.valueOf(ball.getScore()), JOptionPane.YES_NO_OPTION );
		System.exit(ABORT);
	}
	
	public void win()
	{
			JOptionPane.showMessageDialog(this, "YoU wIn CoNgRaTs!", "Final score is " + String.valueOf(ball.getScore()), JOptionPane.YES_NO_OPTION );
			System.exit(ABORT);	
	}
	
	public void title()
	{
		JOptionPane.showMessageDialog(this,"Instructions: Using the paddle, hit the bricks with the ball", "Brick Breaker", JOptionPane.YES_NO_OPTION );
		//System.exit(ABORT);	
	}
	
	/*public static void main(String[] args) throws InterruptedException {
		
		JFrame screen = new JFrame("Paddle Balll");
		PaddleBall game = new PaddleBall();
		screen.add(game);
		screen.setSize(500, 500);
		screen.setVisible(true);
		screen.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	
			while(true)
			{
				game.move();
				game.repaint();
				int speed = 4000-game.ball.getScore()*100;
				Thread.sleep(speed/1000,speed%1000);
			}
		}*/
}
