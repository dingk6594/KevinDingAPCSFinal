package JavaGame;

//© A+ Computer Science  -  www.apluscompsci.com
//Name -
//Date -
//Class - 
//Lab  -

import java.io.File;
import java.net.URL;
import java.util.List;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
//import java.awt.Image;
import java.awt.image.BufferedImage;

import javax.imageio.ImageIO;

public class Ship extends MovingThing
{
	private int speed, lives = 3, angle;
	private BufferedImage image;
	private boolean alive = true;


	public Ship()
	{
		this(10,10,10,10,10);
	}

	public Ship(int x, int y)
	{
	   //add code here
		super (x, y);
	}
	
	public int getX()
	{
		return super.getX();
	}
	
	public int getY()
	{
		return super.getY();
	}
	

	public Ship(int x, int y, int s)
	{
	   //add code here
		super (x, y);
		speed = s;
	}

	public Ship(int x, int y, int w, int h, int s)
	{
		super(x, y, w, h);
		speed=s;
		try
		{
			URL url = getClass().getResource("ship.png");
			image = ImageIO.read(url);
		}
		catch(Exception e)
		{
			//feel free to do something here
		}
	}


	public void setSpeed(int s)
	{
	   //add more code
		speed = s;
	}

	public int getSpeed()
	{
	   return speed;
	}
	
	public BufferedImage rotate(int angle)
	{
		int w = image.getWidth();
		int h = image.getHeight();
		BufferedImage newImage = new BufferedImage(w, h, image.getType());
		Graphics2D g = newImage.createGraphics();
		g.rotate(Math.toRadians(angle), w / 2, h / 2);
		g.drawImage(image, null, 0, 0);
		return newImage;
	}

	public void move(String direction)
	{
		//add code here
		if (direction.equals("LEFT"))
		{
			super.setX(getX()-speed);
		}
		if (direction.equals("RIGHT"))
		{
			super.setX(getX()+speed);
		}
		if (direction.equals("DOWN"))
		{
			super.setY(getY()-speed);
		}
		if (direction.equals("UP"))
		{
			super.setY(getY()+speed);
		}
		if(direction.equals("RLEFT"))
		{			
			angle += 1;
		}
		if(direction.equals("RRIGHT"))
		{
			angle -= 1;
		}
	}
	
	public void turn(String direction)
	{		
				
		if(direction.equals("RLEFT"))
		{			
			angle += 1;
		}
		else if(direction.equals("RRIGHT"))
		{
			angle -= 1;
		}
		//modifiedImage = rotate(-angle);		
	}
	
	public int getAngle()
	{
		//System.out.println(angle);
		return (angle + 90) % 360;
	}
	
	public void numlives(List<Ammo> shots)
	{
		int original = shots.size();
		for (int i = 0; i < shots.size(); i++)
		{
			if (shots.get(i).collides(this))
			{
				shots.remove(i);
				lives = lives - original + shots.size();
			}
		}
	}
	
	public boolean isAlive()
	{
		if (lives < 0)
			alive = false;
		return alive;
	}
	
	public int getLives()
	{
		return lives;
	}

	public void draw( Graphics window )
	{
		window.drawImage(rotate(-angle),getX(),getY(),getWidth(),getHeight(),null);
	}

	public String toString()
	{
		return "LIVES: "+lives;
	}
}
